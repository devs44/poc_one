import { Driver, MigrationQueryResult } from '../interfaces';
export declare abstract class CommonDriver<T> implements Driver {
    dbRunner: T;
    migrationTable: string;
    constructor(dbRunner: T, migrationTable?: string);
    getSeparator(): () => string;
    getDbMigrations(): string;
    removeAllMigrations(): string;
    getFailedMigrations(): string;
    markExecuted(): string;
    createUniqueTableIndex(): string;
    abstract readQuery<T>(sql: string, params: unknown[]): Promise<MigrationQueryResult<T>>;
    query(sql: string, params: unknown[]): Promise<string | null>;
    executeMultipleStatements(sql: string): Promise<string | null>;
    abstract isInitedSql(): string;
    abstract createTableSql(): string;
    extractError(e: {
        message?: string;
    } | null): string | null;
}
